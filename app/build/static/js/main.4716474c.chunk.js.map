{"version":3,"sources":["fonts/roboto/Roboto-Black.ttf","serviceWorker.js","util/cookies.js","components/Test.js","containers/BaseTemplate.js","containers/Landing.js","components/EPortfolioPreview.js","components/AddPortfolio.js","containers/BasePage.js","containers/Updates.js","containers/Contact.js","components/PasswordStrengthMeter.js","util/form.js","components/PwordReset_Form.js","components/DetailUpdate.js","containers/Settings.js","components/Widgets/EmbedWidget.js","components/Widgets/TextWidget.js","components/Widgets/ImageWidget.js","components/Widgets/PortfolioWidget.js","components/Widgets/MotherWidget.js","components/Widgets/DropDownBox.js","components/Widgets/WidgetFields.js","components/EditBox.js","containers/EPortfolio.js","containers/EPortfolioDemo.js","components/RightNav/Popup.js","components/Login_Form.js","components/Signup_Form.js","components/RightNav/UserNav.js","routing.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","isAuthorized","Cookies","get","isLoggedIn","authorize","requestOptions","a","fetch","response","json","data","message","toLowerCase","auth64","Authorization","set","path","maxAge","deauthorize","Auth","method","headers","remove","Test","useState","test","setTest","useEffect","res","toString","BaseTemplate","props","className","href","tabIndex","src","alt","height","nav_right","children","Landing","EPortfolioPreview","link","id","name","newName","setNewName","body","JSON","stringify","editButton","trigger","modal","nested","closeOnDocumentClick","close","onClick","type","value","onChange","e","target","handleEdit","update","img","role","position","on","mouseLeaveDelay","mouseEnterDelay","contentStyle","padding","border","width","arrow","handleDelete","AddPortfolio","setName","PID","portfolio","postInitialWidget","about","public_id","placeholder","handleSubmit","BasePage","setUpdate","setUpdateTrue","user","setUser","profiles","setProfiles","user_data","prof_data","profile","portfolios","fetchProfiles","map","key","title","f","PasswordStrengthMeter","password","testedResult","zxcvbn","createPasswordLabel","result","score","max","validateEmail","email","String","useFormFields","initialState","fields","setValues","event","PasswordResetForm","old_Password","new_Password","handleFieldChange","isLoading","setLoading","isComplete","setComplete","isIncorrect","setIncorrect","requestOptions_ver","ver_data","requestOptions_id","requestOptions_reset","length","Form","onSubmit","preventDefault","FormGroup","controlId","FormLabel","FormControl","autoComplete","required","Button","disabled","DetailUpdate","new_Email","new_Firstname","new_Lastname","getUser","returned_user","handlePatch","name_first","name_last","patch","requestOptions_patch","Settings","EmbedToHTML","frameBorder","allow","TextToHTML","text","ImageToHTML","draggable","PortfolioToHTML","desc","MotherWidget","widget","w_data","image_url","external_url","description","DropDownBox","widgetTypes","setWidgetTypes","fetchWidgetTypes","widgetType","GetFields","setFields","defaultData","setText","getFieldRequirementsForEachWidget","i","changed","Object","keys","field","txt","textOBJ","setTextList","defaultValue","embedHint","EditBox","dropDownType","setDropDownType","setData","changeCount","setChangeCount","deleteWidget","widgetLocation","portfolioID","onApplyClick","alert","updateWidget","callUpdate","onOpen","onOpenSettings","old","onDropdownChange","widgetData","EPortfolio","history","useHistory","setProfile","widgets","setWidget","movable","setMovable","preview","editMode","setEditMode","URL","split","fetchWidgets","p_response","p_data","push","w_response","initFetch","locationA","layout","layouts","w","h","x","y","sameArr","updateWidgetLocations","arr1","arr2","addWidget","cols","rowHeight","columns","margin","compactType","onLayoutChange","isDraggable","isResizable","data-grid","MyGrid","this","allowFullScreen","allowtransparency","header","frameborder","React","Component","CustomPopup","open","setOpen","closeModal","content","CloseButton","o","onClose","LoginForm","login_email","login_password","values","pattern","SignupForm","signup_firstname","signup_lastname","signup_email","signup_password","signup_confirmPassword","requestOptions_signup","requestOptions_login","UserNav","LoginPage","SignUpPage","ProfilePage","RightNav","SettingsPage","PortfolioPage","ReactDOM","render","StrictMode","exact","component","to","document","getElementById","process","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4716474c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Roboto-Black.5ebb24ee.ttf\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import Cookies from 'universal-cookie';\r\n\r\nexport function isAuthorized() {\r\n    return new Cookies().get('authorization');\r\n}\r\n\r\nexport function isLoggedIn() {\r\n    if (new Cookies().get('logged_in') === \"1\") {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport async function authorize(requestOptions) {\r\n    //util cookie/authentication implementation\r\n    const response = await fetch('api/auth/login', requestOptions);\r\n    const data = await response.json();\r\n\r\n    if (data.message.toLowerCase() === 'successfully logged in.') {\r\n        const auth64 = data.Authorization;\r\n        new Cookies().set('authorization', auth64, {path:'/', maxAge:1200}); //temp 10 minute expiry for cookie\r\n        new Cookies().set('logged_in', 1, {path:'/', maxAge:1200}); //temp 10 minute expiry for cookie\r\n    }\r\n}\r\n\r\nexport async function deauthorize() {\r\n    const Auth = new Cookies().get('authorization');\r\n    // register logout with backend\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth }\r\n    };\r\n    await fetch('api/auth/logout', requestOptions);\r\n\r\n    new Cookies().remove('authorization');\r\n    new Cookies().set('logged_in', 0, {path:'/'});\r\n}","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nfunction Test() {\r\n    const [test, setTest] = useState({\"test\": \"API not running\"});\r\n\r\n    useEffect(() => {\r\n        fetch('/api/status').then(res =>\r\n            res.json().then(data => {\r\n                setTest(data);\r\n            })\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <p>API Status: {test.toString()}</p>\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","import React, { Fragment } from 'react';\r\nimport Test from '../components/Test';\r\n\r\nexport default function BaseTemplate(props) {\r\n    return (\r\n        <Fragment>\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-lg pl-3 pl-sm-0\">\r\n                    <div className=\"container\">\r\n                        <div className=\"navbar-brand-wrapper d-flex\">\r\n                            <a href=\"/\" tabIndex=\"-1\"><img src={process.env.PUBLIC_URL + \"/images/Logo.png\"} alt=\"\" height=\"50\" className=\"pr-4\" /></a>\r\n                            <h1 className=\"pt-1\">ePortfolio</h1>\r\n                        </div>\r\n                        <ul className=\"navbar-nav links\">\r\n                            <li><a href=\"/\" tabIndex=\"-1\">Home</a></li>\r\n                            <li><a href=\"/updates\" tabIndex=\"-1\">Updates</a></li>\r\n                            <li><a href=\"/contact\" tabIndex=\"-1\">Contact Us</a></li>\r\n                        </ul>\r\n                        <div className=\"navbar-menu-wrapper navbar-nav\">\r\n                            {props.nav_right}\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n            <section className=\"main_content pb-3\">\r\n                {props.children}\r\n            </section>\r\n            <footer className=\"border-top text-center text-muted\">\r\n                <p className=\"pt-3\"><a href=\"/demo\" tabIndex=\"-1\">FiveCent Software Systems.</a></p>\r\n                <Test />\r\n            </footer>\r\n        </Fragment>\r\n    );\r\n}","import React, {Fragment} from 'react';\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"banner\">\r\n                <div className=\"container pb-5\">\r\n                      <h1 className=\"font-weight-semibold\">E-portfolio Landing page.</h1>\r\n                      <h6 className=\"font-weight-normal text-muted pt-3\">An electronic portfolio is a collection of electronic evidence assembled and managed by a user, usually on the Web.</h6>\r\n                      <img src={process.env.PUBLIC_URL + \"/images/Hero_Image.svg\"} alt=\"\" className=\"img-fluid pt-5\" />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport '../styles/BasePage.css';\r\nimport '../styles/ePortfolio-popup.css';\r\nimport { isAuthorized } from \"../util/cookies\";\r\n\r\n\r\n\r\nfunction EPortfolioPreview(props){\r\n    const Auth = isAuthorized();\r\n    const link = \"/portfolio/\" + props.id;\r\n\r\n    //delete function \r\n    async function handleDelete() {\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth},\r\n        };\r\n        await fetch('api/'+ link, requestOptions);\r\n    }\r\n\r\n    //edit funciton \r\n    const [newName, setNewName] = useState(props.name)\r\n\r\n    async function handleEdit() {\r\n        const requestOptions = {\r\n            method: 'PATCH',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth},\r\n            body: JSON.stringify({\r\n                \"title\": newName\r\n              })\r\n        };\r\n        await fetch('api/'+ link, requestOptions);\r\n    }\r\n    \r\n\r\n    function editButton() {\r\n        \r\n        return (\r\n            <Popup\r\n                trigger={<button className=\"menu-item\" > Edit </button>}\r\n                modal\r\n                nested\r\n                className=\"ePortfolio-popup\"\r\n                closeOnDocumentClick={false}>\r\n                {close => (\r\n                <div className=\"modal\">\r\n                    <button className=\"close\" onClick={close}>\r\n                    &times;\r\n                    </button>\r\n                    <div className=\"header2\"> <h1>Edit Portfolio</h1> </div>\r\n                    <div className=\"content2\">\r\n                    {' '}\r\n                    <div>\r\n                        <label>\r\n                            Portfolio Name:<br />\r\n                            <input className='basePageTextBox'\r\n                                type=\"text\"\r\n                                value={newName}\r\n                                onChange={(e) => setNewName(e.target.value)}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"actions\">\r\n                    <button className=\"button\" onClick={() => {\r\n                                handleEdit();\r\n                                close();\r\n                                update();\r\n                    }}> Apply </button>\r\n\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </Popup>\r\n        )\r\n    }\r\n\r\n    //settings button \r\n    function settingsButton() {\r\n        return (\r\n            <Popup\r\n                trigger={<button className=\"menu-item\"><span role=\"img\">⚙</span></button>}\r\n                position=\"right bottom\"\r\n                on={['hover', 'focus']}\r\n                mouseLeaveDelay={100}\r\n                mouseEnterDelay={0}\r\n                contentStyle={{ padding: '0px', border: 'none' ,width: '80px'}}\r\n                arrow={false}\r\n                nested\r\n                className=\"basepage\"\r\n                >\r\n                {close => (\r\n                    <div className=\"menu\">\r\n                        {editButton()}\r\n                        <button className=\"menu-item\" onClick={() => {\r\n                            handleDelete();\r\n                            close();\r\n                            update();\r\n                        }}> Delete </button>\r\n                    </div>\r\n                )}\r\n                \r\n            </Popup>\r\n        )\r\n    }\r\n\r\n    function update() {\r\n        if (props.onUpdate) {\r\n            props.onUpdate();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"eportfoliopreview\">\r\n            <a href={ link } className=\"eportfolioinfo\">\r\n                <h3>{props.name}</h3>\r\n                <p> {props.id} </p>\r\n                <img src={props.img ? props.img : \"/images/placeholder.jpg\"} alt=\"\" height='150'/>\r\n            </a>\r\n            <div className=\"button_container\" >\r\n                {settingsButton()}\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default EPortfolioPreview;","import React, { useState, Fragment }from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport '../styles/BasePage.css';\r\nimport { isAuthorized } from \"../util/cookies\";\r\n\r\n\r\nfunction AddPortfolioInfo(){\r\n    return(\r\n        <Fragment>\r\n            <h3>Add ePortfolio</h3>\r\n            <h1> + </h1>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default function AddPortfolio(props) {\r\n    const Auth = isAuthorized();    \r\n\r\n\r\n    const [name, setName] = useState('')\r\n\r\n    function update() {\r\n        if (props.onUpdate) {\r\n            props.onUpdate();\r\n        }\r\n    }\r\n\r\n    async function handleSubmit() {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth},\r\n            body: JSON.stringify({\r\n                \"title\": name\r\n              })\r\n        };\r\n        const portfolio = await fetch('api/user/'+ props.PID + '/portfolio', requestOptions);\r\n\r\n        const data = await portfolio.json();\r\n        \r\n        const postInitialWidget = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth},\r\n            body: JSON.stringify({\r\n                        type: \"about\",\r\n                        location: [1,1,0,0],\r\n                        data:{\r\n                            about: \"I am a widget! \\n\\n Feel free to resize me from the bottom right corner. \\n You can also drag me around to change my position. \\n\\n You can also change what I display using the cog on the bottom left. \\n You can also delete me 🥺 \\n\\n Also, if you want more widgets, click the 'Add Widget' button on the top right of your screen!\"\r\n                            }\r\n                        \r\n                    })\r\n        };\r\n        await fetch('/api/portfolio/' + data.portfolio.public_id + '/widget', postInitialWidget);\r\n    }\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"eportfoliopreview\">\r\n            <div className=\"eportfolioinfo\">\r\n                <Popup\r\n                    trigger={<button className=\"addButton\"> {AddPortfolioInfo()} </button>}\r\n                    modal\r\n                    className=\"ePortfolio-popup\"\r\n                    closeOnDocumentClick={false}\r\n                    nested>\r\n                    {close => (\r\n                    <div className=\"modal\">\r\n                        <button className=\"close\" onClick={close}>\r\n                        &times;\r\n                        </button>\r\n                        <div className=\"header2\"> <h1>Add Portfolio</h1> </div>\r\n                        <div className=\"content\">\r\n                        {' '}\r\n                        <form>\r\n                            <label>\r\n                                Portfolio Name:<br />\r\n                                <input className='basePageTextBox' type=\"text\" placeholder=\"Untitled\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                            </label>\r\n                        </form>\r\n                        </div>\r\n                        <div className=\"actions\">\r\n                        <button className=\"button\" onClick={() => {\r\n                                    handleSubmit();\r\n                                    close();\r\n                                    update();\r\n                        }}> Add </button>\r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                </Popup>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport EPortfolioPreview from \"../components/EPortfolioPreview\";\r\nimport AddPortfolio from \"../components/AddPortfolio\";\r\nimport \"../styles/BasePage.css\";\r\nimport { isAuthorized } from \"../util/cookies\";\r\n\r\nexport default function BasePage() {\r\n    const Auth = isAuthorized();\r\n\r\n    //check for updates\r\n    const [update, setUpdate] = useState(false);\r\n\r\n    function setUpdateTrue() {\r\n        setUpdate(!update);\r\n    }\r\n\r\n    //store user and portfolio\r\n    const [user, setUser] = useState();\r\n    const [profiles, setProfiles] = useState([]);\r\n\r\n    //fetch user and portfolios \r\n    useEffect( () =>{\r\n        \r\n        const fetchProfiles = async() => {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth }\r\n            };\r\n            const user_data = await fetch('/api/auth/user', requestOptions);\r\n            const user = await user_data.json();\r\n            setUser(user.public_id);\r\n\r\n            const prof_data = await fetch('/api/user/' + user.public_id + '/portfolio', requestOptions);\r\n            const profile = await prof_data.json();\r\n            setProfiles(profile.portfolios);\r\n        }\r\n        fetchProfiles();\r\n    }, [Auth, update])\r\n\r\n    //-----------------------------------------------------------------------------------------------------\r\n    \r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"basepage\">\r\n                {profiles.map(profile =>(\r\n                    < EPortfolioPreview key={profile.public_id} name={profile.title} id={profile.public_id} onUpdate={(e) => setUpdateTrue()}/>\r\n                ))}\r\n                < AddPortfolio PID = {user} onUpdate={(f) => setUpdateTrue()}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <div className=\"banner\">\r\n            <div className=\"container pb-5\">\r\n                  <h1 className=\"font-weight-semibold\">Updates</h1>\r\n                  <h6 className=\"font-weight-normal text-muted pt-3\">A place to see updates on the electronic portfolio project, as managed by the FiveCent Software Systems team.</h6>\r\n                  <img src={process.env.PUBLIC_URL + \"/images/update.png\"} alt=\"\" className=\"img-fluid w-50\" />\r\n            </div>\r\n            <div className=\"container pb-3\">\r\n                <div className=\"text-left font-weight-normal w-75\">\r\n                    <h3>Updates Feature</h3>\r\n                    <h5>22/9/2020</h5>\r\n                    <p className=\"pb-4\">\r\n                    Welcome to the start of the updates section of the presently named \"e-portfolio system\".\r\n                    In the updates section we will record some of the updates and major milestones we achieve\r\n                    through the course of the development process of this product.\r\n                    This product is apart of a semester long project hosted within the subject \"IT Project\" at\r\n                    Unimelb.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <div className=\"banner\">\r\n            <div className=\"container pb-5\">\r\n                  <h1 className=\"font-weight-semibold\">Contact Us</h1>\r\n                  <h6 className=\"font-weight-normal text-muted pt-3\">A place to find contact information for FiveCent Software Systems regarding the Project</h6>\r\n                  <img src={process.env.PUBLIC_URL + \"/images/contact.png\"} alt=\"\" className=\"img-fluid w-50\" />\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"text-left font-weight-normal pb-5\">\r\n                    <h3>Email</h3>\r\n                    <p className=\"mb-0\">Please contact us via our client representatives email.</p>\r\n                    <a className=\"link\" href=\"mailto:csagar@student.unimelb.edu.au\">csagar@student.unimelb.edu.au</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","//Inspired by: https://upmostly.com/tutorials/build-a-password-strength-meter-react\r\n\r\nimport React from 'react';\r\nimport zxcvbn from 'zxcvbn';\r\nimport '../styles/PasswordStrengthMeter.css';\r\n\r\nexport default function PasswordStrengthMeter(props) {\r\n    const password = props.password;\r\n    const testedResult = zxcvbn(password);\r\n\r\n    function createPasswordLabel(result) {\r\n        switch (result.score) {\r\n            case 1:\r\n                return 'Weak';\r\n            case 2:\r\n                return 'Fair';\r\n            case 3:\r\n                return 'Good';\r\n            case 4:\r\n                return 'Strong';\r\n            default:\r\n                return 'Weak';\r\n    }\r\n  }\r\n\r\n    return (\r\n        <div className=\"password-strength-meter\">\r\n            <progress\r\n                className={`password-strength-meter-progress strength-${createPasswordLabel(testedResult)}`}\r\n                value={testedResult.score}\r\n                max=\"4\"\r\n            />\r\n            <label className=\"password-strength-meter-label\">\r\n                {createPasswordLabel(testedResult)}\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport function validateEmail(email) {\r\n    const re = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)+$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nexport function useFormFields(initialState) {\r\n    const [fields, setValues] = useState(initialState);\r\n\r\n    return [\r\n        fields,\r\n        function(event) {\r\n            setValues({\r\n                ...fields,\r\n                [event.target.id]: event.target.value\r\n            });\r\n        }\r\n    ];\r\n}\r\n","/** Code adapted from https://serverless-stack.com/chapters/create-the-signup-form.html */\r\n\r\nimport React, { useState, useEffect }  from \"react\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n} from \"react-bootstrap\";\r\nimport '../styles/Form.css';\r\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\r\nimport { useFormFields } from \"../util/form\";\r\nimport { isAuthorized } from \"../util/cookies\";\r\n\r\nexport default function PasswordResetForm() {\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        old_Password: \"\",\r\n        new_Password: \"\",\r\n    });\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isComplete, setComplete] = useState(false);\r\n    const [isIncorrect, setIncorrect] = useState(false);\r\n    const Auth = isAuthorized();\r\n\r\n    useEffect(() => {\r\n        async function handleSubmit() {\r\n            //verify password\r\n            const requestOptions_ver = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({email: String(fields.email).toLowerCase(), password: fields.old_Password})\r\n                };\r\n            const ver_data = await fetch('/api/auth/login', requestOptions_ver);\r\n            const data = await ver_data.json();\r\n            const auth64 = data.Authorization\r\n            if (data.message === 'Login details incorrect, check and try again') {\r\n                setIncorrect(true);\r\n                return;\r\n            }\r\n\r\n            //get user id\r\n            const requestOptions_id = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': \"bearer \" + auth64}\r\n            };\r\n            const user_data = await fetch('/api/auth/user', requestOptions_id);\r\n            const user = await user_data.json();\r\n            //reset\r\n            const requestOptions_reset = {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': \"bearer \" + Auth},\r\n                body: JSON.stringify({public_id: user.public_id,\r\n                                      password: fields.new_Password})\r\n            };\r\n            await fetch('api/auth/reset', requestOptions_reset);\r\n            setComplete(true);\r\n        }\r\n\r\n        function validateForm() {\r\n            return (\r\n                fields.new_Password.length > 0\r\n            );\r\n        }\r\n\r\n        if (isLoading) {\r\n            if (validateForm) {\r\n                handleSubmit().then(() => {\r\n                    setLoading(false);\r\n                });\r\n            } else {\r\n                setLoading(false);\r\n                setIncorrect(true);\r\n            }\r\n        }\r\n    }, [isLoading, fields, Auth]);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleClick}>\r\n            <h1>Password Reset</h1>\r\n            <FormGroup controlId=\"email\">\r\n                <FormLabel>Email<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"email\"\r\n                    onChange={handleFieldChange}\r\n                    value={fields.email}\r\n                    placeholder=\"Email\"\r\n                    autoComplete=\"email\"\r\n                    required/>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"old_Password\">\r\n                <FormLabel>Old Password<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    onChange={handleFieldChange}\r\n                    value={fields.old_Password}\r\n                    placeholder=\"Old Password\"\r\n                    autoComplete=\"password\"\r\n                    required/>\r\n            </FormGroup>\r\n            {isIncorrect ?\r\n                <p className=\"response invalidResp\">Incorrect email or password, please try again.</p>\r\n                :\r\n                null\r\n            }\r\n            <PasswordStrengthMeter password={fields.new_Password} />\r\n            <FormGroup controlId=\"new_Password\">\r\n                <FormLabel>New Password<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    onChange={handleFieldChange}\r\n                    value={fields.new_Password}\r\n                    placeholder=\"New Password\"\r\n                    autoComplete=\"password\"\r\n                    required/>\r\n            </FormGroup>\r\n            {isComplete ?\r\n                <p className=\"response validResp\">Your new password has been set.</p>\r\n                :\r\n                <Button\r\n                    className=\"btn\"\r\n                    type=\"submit\"\r\n                    disabled={isLoading}\r\n                >\r\n                    {isLoading ? 'Loading...' : 'Reset'}\r\n                </Button>\r\n            }\r\n        </Form>\r\n    );\r\n}\r\n","/** Code adapted from https://serverless-stack.com/chapters/create-the-signup-form.html */\r\n\r\nimport React, { useState, useEffect }  from \"react\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n} from \"react-bootstrap\";\r\nimport '../styles/Form.css';\r\nimport { useFormFields } from \"../util/form\";\r\nimport { isAuthorized } from \"../util/cookies\";\r\n\r\nexport default function DetailUpdate() {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isComplete, setComplete] = useState(false);\r\n    const [user, setUser] = useState([]);\r\n    const Auth = isAuthorized();\r\n\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        new_Email: \"\",\r\n        new_Firstname: \"\",\r\n        new_Lastname: \"\"\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        async function getUser() {\r\n            //get user id\r\n            const requestOptions_id = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': \"bearer \" + Auth}\r\n            };\r\n            const user_data = await fetch('api/auth/user', requestOptions_id);\r\n            const returned_user = await user_data.json();\r\n            setUser(returned_user);\r\n        }\r\n\r\n        async function handleSubmit() {\r\n            //format patch body\r\n            if (fields.new_Email.length !== 0) {\r\n                await handlePatch(JSON.stringify({email: fields.new_Email}));\r\n                fields.new_Email = \"\";\r\n            }\r\n            if (fields.new_Firstname.length !== 0) {\r\n                await handlePatch(JSON.stringify({name_first: fields.new_Firstname}));\r\n                fields.new_Firstname = \"\";\r\n            }\r\n            if (fields.new_Lastname.length !== 0) {\r\n                await handlePatch(JSON.stringify({name_last: fields.new_Lastname}));\r\n                fields.new_Lastname = \"\";\r\n            }\r\n        }\r\n\r\n        async function handlePatch(patch) {\r\n            //patch\r\n            const requestOptions_patch = {\r\n                method: 'PATCH',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': \"bearer \" + Auth},\r\n                body: patch\r\n            };\r\n            await fetch(\"/api/user/\" + user.public_id, requestOptions_patch);\r\n        }\r\n\r\n\r\n        function validateForm() {\r\n            return (\r\n                fields.new_Email.length > 0 ||\r\n                fields.new_Firstname.length > 0 ||\r\n                fields.new_Lastname.length > 0\r\n            );\r\n        }\r\n\r\n        if (isLoading) {\r\n            if (validateForm) {\r\n                handleSubmit().then(() => {\r\n                    getUser();\r\n                    setLoading(false);\r\n                    setComplete(true);\r\n                });\r\n            } else {\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            getUser();\r\n        }\r\n    }, [isLoading, fields, Auth, user]);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleClick}>\r\n            <h1>Update Details</h1>\r\n            <FormGroup controlId=\"new_Email\">\r\n                <FormLabel>Email</FormLabel>\r\n                <FormControl\r\n                    type=\"email\"\r\n                    onChange={handleFieldChange}\r\n                    value={fields.new_Email}\r\n                    placeholder={`${user.email}`}\r\n                    autoComplete=\"email\"\r\n                />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"new_Firstname\">\r\n                <FormLabel>First name</FormLabel>\r\n                <FormControl\r\n                    type=\"text\"\r\n                    onChange={handleFieldChange}\r\n                    value={fields.new_Firstname}\r\n                    placeholder={`${user.name_first}`}\r\n                    autoComplete=\"name\"\r\n                />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"new_Lastname\">\r\n                <FormLabel>Last name</FormLabel>\r\n                <FormControl\r\n                    type=\"text\"\r\n                    onChange={handleFieldChange}\r\n                    value={fields.new_Lastname}\r\n                    placeholder={`${user.name_last}`}\r\n                    autoComplete=\"surname\"\r\n                />\r\n            </FormGroup>\r\n            {isComplete ?\r\n                <p className=\"response validResp\">Your details have been updated.</p>\r\n                : null\r\n            }\r\n            <Button\r\n                className=\"btn\"\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n            >\r\n                {isLoading ? 'Loading...' : 'Update'}\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PasswordResetForm from '../components/PwordReset_Form';\r\nimport DetailUpdate from '../components/DetailUpdate';\r\n\r\nexport default function Settings() {\r\n    return (\r\n        <div className=\"form-container m-auto\">\r\n            <DetailUpdate />\r\n            <PasswordResetForm />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\n\r\nexport function EmbedToHTML({src, title=\"embed\", width = '100%', height = '100%'}) {\r\n    return (\r\n        <iframe width={width} height={height} src={src} frameBorder=\"0\" title={title}\r\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\r\n    );\r\n}\r\n\r\nexport default EmbedToHTML;","import React from 'react';\r\n\r\n\r\nexport function TextToHTML({text}) {\r\n\r\n    \r\n    return (\r\n        <p>{text}</p>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default TextToHTML;","import React from 'react';\r\n\r\n\r\nexport function ImageToHTML({src = 'https://i.kym-cdn.com/entries/icons/facebook/000/016/540/hgh08Pez.jpg', alt = 'an image', width = '100%', height = '100%'}) {\r\n    return (\r\n        <img src={src} alt={alt} width={width} height={height} draggable={'false'} />\r\n    );\r\n}\r\n\r\nexport default ImageToHTML;","import React from 'react';\r\n\r\n\r\nexport function PortfolioToHTML({name, desc, src}) {\r\n\r\n    \r\n    return (\r\n        <a href={src}>\r\n            <h1>{name}</h1>\r\n            <p>{desc}</p>\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default PortfolioToHTML;","import React from 'react';\r\nimport EmbedToHTML from './EmbedWidget';\r\nimport TextToHTML from './TextWidget';\r\nimport ImageToHTML from './ImageWidget';\r\nimport PortfolioToHTML from './PortfolioWidget';\r\n\r\n\r\nexport function MotherWidget({widget}) {\r\n    const w_data = widget.data;\r\n    if (widget.type === 'about') {\r\n        return (\r\n            <TextToHTML text={w_data.about} />\r\n        );\r\n\r\n    } else if (widget.type === 'image') {\r\n        return (\r\n            <ImageToHTML src={w_data.image_url} width={'100%'} height={'100%'} />\r\n        );\r\n    } else if (widget.type === 'embed') {\r\n        return (\r\n            <EmbedToHTML src={w_data.external_url} title={widget.public_id} />\r\n        )\r\n    } else if (widget.type === 'project') {\r\n        return (\r\n            <PortfolioToHTML name={w_data.name} desc={w_data.description} src={\"http://\"+w_data.external_url} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default MotherWidget;","import React, {useEffect, useState} from \"react\";\r\nimport '../../styles/ePortfolio-popup.css';\r\nimport { isAuthorized } from \"../../util/cookies\";\r\n\r\n\r\nexport default function DropDownBox(props) {\r\n    const Auth = isAuthorized();    \r\n\r\n\r\n    const [widgetTypes, setWidgetTypes] = useState([]);\r\n    useEffect( () => {\r\n\r\n        async function fetchWidgetTypes() {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth }\r\n            };\r\n            const response = await fetch('/api/widget/types', requestOptions);\r\n            const data = await response.json();\r\n            setWidgetTypes(data);\r\n        }\r\n\r\n        fetchWidgetTypes();\r\n    }, [Auth]);\r\n\r\n    return (\r\n        <div> \r\n            <select className=\"DropDown\" name=\"types\" id=\"pavle\" onChange={props.onChange} value={props.value}>\r\n                {widgetTypes.map(widgetType =>(\r\n                    <option key={widgetType.type} className=\"nani\" value={widgetType.type}>{widgetType.type}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}","//ligma\r\nimport React, {useEffect, useState} from 'react';\r\nimport { isAuthorized } from \"../../util/cookies\";\r\n\r\n\r\n\r\nexport default function GetFields(props) {\r\n    const Auth = isAuthorized();    \r\n\r\n    const [fields, setFields] = useState([]);\r\n    const [text, setText] = useState(props.defaultData);\r\n\r\n\r\n    function setTextList(field, txt) {\r\n        var textOBJ = text;\r\n        textOBJ[field] = txt;\r\n        setText(textOBJ);\r\n        if (props.onChange) {\r\n            props.onChange(textOBJ);\r\n        }\r\n    }\r\n\r\n    function getDefaultData() {\r\n        if (props.changed != 0) {\r\n            return {};\r\n        }\r\n        return props.defaultData;\r\n    }\r\n\r\n//    function undefinedText(text) {\r\n//        var output;\r\n//        if (text === undefined) {\r\n//            output = '';\r\n//        } else {\r\n//            output = text;\r\n//        }\r\n//        return output;\r\n//    }\r\n\r\n    useEffect( () => {\r\n        function getFieldRequirementsForEachWidget(data) {\r\n            var i=0;\r\n            for (i = 0; i<data.length; i++) {\r\n                if (props.type === data[i].type) {\r\n                    setFields(data[i].data);\r\n                }\r\n            }\r\n        }\r\n\r\n        async function fetchWidgetTypes() {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth }\r\n            };\r\n            const response = await fetch('/api/widget/types', requestOptions);\r\n            const data = await response.json();\r\n            getFieldRequirementsForEachWidget(data);\r\n        }\r\n\r\n        fetchWidgetTypes();\r\n    }, [props, Auth]);\r\n\r\n    useEffect( () => {\r\n        if (props.changed) {\r\n            setText({});\r\n        }\r\n    }, [props.type]);\r\n\r\n    return (\r\n            <div>\r\n                {Object.keys(fields).map(field =>(\r\n                    <label key={field}>\r\n                        {field}:\r\n                        <br />\r\n                        <textarea\r\n                            className='basePageTextBox'\r\n                            type=\"text\" value={text.field}\r\n                            onChange={(e) => setTextList(field, e.target.value)}\r\n                            defaultValue={getDefaultData()[field]}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                    </label>\r\n                ))}\r\n                {embedHint()}\r\n            </div>\r\n\r\n        \r\n    )\r\n\r\n    function embedHint() {\r\n        if (props.type === \"embed\") {\r\n            return (\r\n                <div> \r\n                    <p>To paste an embed link, just input the src link</p>\r\n                    <p>For example if the embed link is \"iframe width=\"916\" height=\"515\" src=\"https://www.youtube.com/embed/VUzoJrfJQBw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen iframe\" the just use the link after \"src\" </p>\r\n                    <p>i.e. \"https://www.youtube.com/embed/VUzoJrfJQBw\" without the quotes </p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","//your mum and dad\r\nimport React, { useState } from \"react\";\r\n//-----------dependencies------------------------\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport '../styles/ePortfolio-popup.css';\r\n//------------------------------------------------\r\nimport '../styles/ePortfolio-widgets.css';\r\nimport '../styles/resizable-styles.css';\r\nimport '../fonts/roboto/Roboto-Black.ttf';\r\n\r\nimport DropDownBox from './Widgets/DropDownBox.js';\r\nimport GetFields from './Widgets/WidgetFields.js';\r\nimport { isAuthorized } from \"../util/cookies\";\r\n\r\n\r\n\r\nexport default function EditBox(props) {\r\n  const Auth = isAuthorized();    \r\n  const [dropDownType, setDropDownType] = useState(props.widgetType);\r\n  const [data, setData] = useState({});\r\n  const [changeCount, setChangeCount] = useState(0);\r\n\r\n  async function deleteWidget() {\r\n      const requestOptions = {\r\n          method: 'DELETE',\r\n          headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth},\r\n      };\r\n      await fetch('/api/widget/' + props.PID, requestOptions);\r\n  }\r\n\r\n  async function updateWidget() {\r\n      deleteWidget();\r\n      const requestOptions = {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth},\r\n          body: JSON.stringify({  \r\n                                  type: dropDownType,\r\n                                  location: props.widgetLocation,\r\n                                  data          \r\n                              })\r\n      };\r\n      await fetch('/api/portfolio/' + props.portfolioID + '/widget', requestOptions);\r\n  }\r\n\r\n  const onDeleteClick = () => {\r\n      (deleteWidget());\r\n      (callUpdate());\r\n\r\n  }\r\n\r\n  const onApplyClick = () => {\r\n    //bug roundabout coldfix \r\n    if (Object.keys(data).length === 0) {\r\n        window.alert('Nothing new entered!\\nTry again');\r\n    }\r\n    else {\r\n      (updateWidget());\r\n      (callUpdate());\r\n    }\r\n  }\r\n\r\n  function callUpdate() {\r\n      if (props.onChange) {\r\n          props.onChange();\r\n      }\r\n  }\r\n\r\n  function openWidgetSettings() {\r\n      if (props.onOpenSettings) {\r\n          props.onOpenSettings();\r\n      }\r\n\r\n  }\r\n\r\n  function onDropdownChange(e) {\r\n    var old=changeCount;\r\n    setDropDownType(e.target.value);\r\n    setChangeCount(old + 1);\r\n  }\r\n\r\n  return (\r\n      <Popup\r\n          trigger={<button className=\"settingsButton\">⚙</button>}\r\n          modal\r\n          nested\r\n          closeOnDocumentClick={false}\r\n          onOpen={openWidgetSettings}\r\n          className=\"ePortfolio-popup\"\r\n      >\r\n      {close => (\r\n      <div className=\"modal\">\r\n          <DropDownBox value={dropDownType} onChange={(e) => onDropdownChange(e)}/>\r\n          <button className=\"close\" onClick={() => {callUpdate(); close();}}>\r\n          <b>×</b>\r\n          </button>\r\n          <div className=\"header2\"> \r\n              <h1 className=\"impact\">Edit Widget</h1>\r\n          </div>\r\n          <div className=\"content2\">\r\n              {' '}    \r\n              <GetFields type={dropDownType} changed={changeCount} data={data} defaultData={props.widgetData} onChange={(e) => setData(e)}/>\r\n          </div>\r\n          <div className='PopupBottom'>\r\n              <div className='options'>\r\n                  <div className=\"actions\">\r\n                      <button className=\"button\" onClick={() => {onDeleteClick(); close();}}><b className='deleteText'>DELETE</b></button>\r\n                  </div>\r\n              </div>\r\n              <div className='options'>\r\n                  <div className=\"actions\">\r\n                      <button className=\"button\" onClick={() => {onApplyClick(); close();}}><b>APPLY</b></button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      )}\r\n      </Popup>\r\n  )\r\n}","import React, {useEffect, useState} from \"react\";\r\n//-----------dependencies------------------------\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport '../styles/ePortfolio-popup.css';\r\n//------------------------------------------------\r\nimport { useHistory } from \"react-router-dom\";\r\nimport '../styles/ePortfolio-widgets.css';\r\nimport '../styles/resizable-styles.css';\r\nimport '../fonts/roboto/Roboto-Black.ttf'\r\nimport { isAuthorized } from \"../util/cookies\";\r\n\r\nimport MotherWidget from '../components/Widgets/MotherWidget.js';\r\nimport EditBox from '../components/EditBox.js';\r\n\r\nexport default function EPortfolio(props) {\r\n    const Auth = isAuthorized();\r\n    const history = useHistory();\r\n\r\n    const [profile, setProfile] = useState([]);\r\n    const [widgets, setWidget] = useState([]);\r\n    const [movable, setMovable] = useState(true);\r\n    const [editMode, setEditMode] = useState(!props.preview);\r\n\r\n    const URL = window.location.href.split('/');\r\n    const PID = URL[URL.length - 1]\r\n\r\n    const fetchWidgets = async() => {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth }\r\n        };\r\n        const p_response = await fetch('/api/portfolio/' + PID, requestOptions);\r\n        const p_data = await p_response.json();\r\n        if (p_data.error) {\r\n            history.push(\"/profile\");\r\n            return;\r\n        }\r\n        setProfile(p_data.portfolio);\r\n\r\n        const w_response = await fetch('/api/portfolio/' + PID + '/widget', requestOptions);\r\n        const w_data = await w_response.json();\r\n        setWidget(w_data.widgets);\r\n    }\r\n\r\n    //store db\r\n    useEffect( () =>{\r\n        async function initFetch() {\r\n            const requestOptions = {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Authorization': 'bearer ' + Auth }\r\n            };\r\n            const p_response = await fetch('/api/portfolio/' + PID, requestOptions);\r\n            const p_data = await p_response.json();\r\n            if (p_data.error) {\r\n                history.push(\"/profile\");\r\n                return;\r\n            }\r\n            setProfile(p_data.portfolio);\r\n\r\n            const w_response = await fetch('/api/portfolio/' + PID + '/widget', requestOptions);\r\n            const w_data = await w_response.json();\r\n            setWidget(w_data.widgets);\r\n        }\r\n\r\n        setMovable(true);\r\n        initFetch();\r\n    }, [PID, history, Auth]);\r\n\r\n    \r\n    const width = 300;\r\n    const height = 300;\r\n    const columns = 5;\r\n\r\n    async function addWidget() {\r\n        const locationA = [1,1,0,0];\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                                    type: \"about\",\r\n                                    location: locationA,\r\n                                    data:{\r\n                                        about: \"New Widget!\"\r\n                                        }\r\n                                    \r\n                                })\r\n        };\r\n        await fetch('/api/portfolio/' + PID + '/widget', requestOptions);\r\n    }\r\n\r\n    async function onLayoutChange(layout, layouts) {\r\n\r\n        var i;\r\n        for (i=0; i<layout.length; i++) {\r\n            const id = layout[i].i;\r\n            const location = [layout[i].w, layout[i].h, layout[i].x, layout[i].y];\r\n            if (!sameArr(widgets[i].location,location)) {\r\n                const requestOptions = {\r\n                    method: 'PATCH',\r\n                    headers: { 'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({  \r\n                                            location: location\r\n                                        })\r\n                };\r\n                await fetch('/api/widget/' + id, requestOptions);\r\n            }\r\n        }\r\n        updateWidgetLocations(layout);\r\n    }\r\n\r\n    function sameArr(arr1, arr2) {\r\n        for (var i=0; i < arr1.length;i++) {\r\n            if (arr1[i] != arr2[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function updateWidgetLocations(layout) {\r\n        var i;\r\n        for (i=0; i<layout.length; i++) {\r\n            const location = [layout[i].w, layout[i].h, layout[i].x, layout[i].y];\r\n            var wids = widgets;\r\n            wids[i].location = location;\r\n        }\r\n    }\r\n\r\n\r\n    function switchFalse() {\r\n        setMovable(false);\r\n    }\r\n\r\n    function toggleEdit() {\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    function editModeToggleText() {\r\n        if (editMode) {\r\n            return \"Switch to Preview Mode\"\r\n        }\r\n        return \"Switch to Edit Mode\"\r\n    }\r\n\r\n    function onSettingsUpdate() {\r\n        fetchWidgets();\r\n        setMovable(true);\r\n    }\r\n\r\n    return (\r\n        <div className='eportfolioBody'>\r\n            <header className='header'>\r\n                <a href=\"/profile\" className=\"impact\">\r\n                    <h1 >\r\n                        {profile.title}\r\n                    </h1>\r\n                </a>\r\n                {!props.preview ? <button className='addWidgetButton'\r\n                                    onClick={\r\n                                        () => {\r\n                                            toggleEdit();\r\n                                        }\r\n                                    }\r\n                                    > {editModeToggleText()} </button>\r\n                : null}\r\n                {editMode ?\r\n                <button className='addWidgetButton'\r\n                    onClick={() => {\r\n                            addWidget();\r\n                            fetchWidgets();\r\n                        }\r\n                    }\r\n                > Add Widget </button>\r\n                : null\r\n                }\r\n            </header>\r\n            <ReactGridLayout className=\"layout\" cols={columns} rowHeight={height} width={columns * width} margin={[10,10]} compactType={null} onLayoutChange={onLayoutChange} isDraggable={movable && editMode} isResizable={movable && editMode}>\r\n                {widgets.map(widget =>(\r\n                    < div key={widget.public_id} data-grid={{i: widget.public_id, w: widget.location[0], h: widget.location[1], x: widget.location[2], y: widget.location[3]}}>\r\n                        {editMode ? <div className ='blocker'></div> : <div></div>}\r\n                        <MotherWidget widget={widget}/>\r\n                        <div className ='overlay'>\r\n                        {editMode ? <EditBox PID={widget.public_id} onChange={(e) => onSettingsUpdate()} onOpenSettings={(e) => switchFalse()} widgetLocation={widget.location} widgetType={widget.type} widgetData={widget.data} portfolioID ={PID}/> : <div></div>}\r\n                        </div>\r\n                    </ div>\r\n                ))}\r\n            </ReactGridLayout>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactGridLayout from 'react-grid-layout';\r\nimport '../styles/ePortfolio-widgets.css';\r\nimport '../styles/resizable-styles.css';\r\nimport '../fonts/roboto/Roboto-Black.ttf'\r\n\r\nimport {TextToHTML} from \"../components/Widgets/TextWidget\";\r\n\r\nclass MyGrid extends React.Component {\r\n\r\n    width = 220;\r\n    height = 300;\r\n    columns = 5;\r\n    state = {\r\n        data: 'loading...'\r\n    }\r\n    \r\n   render() {\r\n       \r\n      const out = (\r\n        <div className='wholePage'>\r\n            <div>\r\n                <h1 className=\"impact\">\r\n                    DEMO PAGE\r\n                </h1>\r\n            </div>\r\n            <ReactGridLayout className=\"layout\" cols={this.columns} rowHeight={this.height} width={this.columns * this.width} margin={[10,10]} compactType='horizontal' >\r\n            <div key=\"a\" data-grid={{i: 'a', x: 3, y: 1, w: 1, h: 2}}>\r\n                <img src={process.env.PUBLIC_URL + '/images/galaxy.gif'} alt=\"galaxy\" draggable='false' height='100%' />\r\n            </div>\r\n            <div key=\"b\" data-grid={{i: 'b', x: 4, y: 1, w: 1, h: 3}}>\r\n                <iframe width=\"100%\" height=\"100%\" title=\"embed1\" src=\"https://www.youtube.com/embed/aoKwNx3yr-w?autoplay=0&loop=1&color=white\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n            </div>\r\n            <div key=\"c\" data-grid={{i: 'c', x: 0, y: 4, w: 2, h: 1}}>\r\n                <img src={'https://media1.tenor.com/images/8daeb547b121eef5f34e7d4e0b88ea35/tenor.gif?itemid=5156041'} alt={'bruhmoment'} height='100%' draggable='false' />\r\n            </div>\r\n              <div key=\"d\" data-grid={{i: 'd', x: 1, y: 1, w: 2, h: 1}}>\r\n                <img src={'https://media1.tenor.com/images/48d0355da1b5b8ebd414323806ac2a7f/tenor.gif?itemid=13271320'} alt={'damn'} height='100%' draggable='false' />\r\n            </div>\r\n            <div key=\"e\" data-grid={{i: 'e', x: 1, y: 2, w: 2, h: 1}}>\r\n                <img src={'https://data.whicdn.com/images/286894498/original.gif'} alt={'scarce'} height='100%' draggable='false' />\r\n                <p>hey whats up guys its scarce here</p>\r\n            </div>\r\n            <div key=\"f\" data-grid={{i: 'f', x: 2, y: 3, w: 2, h: 1}}>\r\n                <iframe width='100%' height='100%' title=\"embed2\" src=\"https://www.youtube.com/embed/G7RgN9ijwE4?color=white\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                <p>hey this is pretty cool</p>\r\n            </div>\r\n            <div key=\"g\" data-grid={{i: 'g', x: 0, y: 0, w: 1, h: 3}}>\r\n                <iframe width='100%' height='100%' title=\"embed3\" src=\"https://open.spotify.com/embed/playlist/1nvxlaARYE1MMzeEfKgm1R\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n            <p>hey this is pretty cool</p>\r\n            </div>\r\n            <div key=\"h\" data-grid={{i: 'h', x: 1, y: 0, w: 1, h: 1}}>\r\n                <img src={process.env.PUBLIC_URL + '/images/what.gif'} alt={'bruhmoment'} width={this.width} draggable='false' />\r\n            </div>\r\n            <div key=\"i\" data-grid={{i: 'i', x: 2, y: 0, w: 3, h: 1}}>\r\n\r\n                <TextToHTML header=\"Welcome to My Page!\" text={\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"}/>\r\n            </div>\r\n            <div key=\"gj\" data-grid={{i: 'j', x: 0, y: 0, w: 1, h: 3}}>\r\n                <iframe width='100%' height='100%' title=\"embed4\" src=\"https://embed.music.apple.com/au/album/future-nostalgia/1495799403\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\r\n            <p>hey this is pretty cool</p>\r\n            </div>\r\n            </ReactGridLayout>\r\n        </div>\r\n      )\r\n      return out;\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\nexport default function EPortfolio() {\r\n    return (\r\n        <MyGrid/>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Popup from 'reactjs-popup';\r\nimport '../../styles/Form.css';\r\n\r\nexport default function CustomPopup(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const closeModal = () => setOpen(false);\r\n\r\n    const name = props.name;\r\n    const content = props.children;\r\n\r\n    function CloseButton() {\r\n        return (\r\n            <Button className=\"btn cancel\" onClick={closeModal} type=\"button\">\r\n                Close\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button className=\"btn btn-info m-2\" onClick={() => setOpen(o => !o)} type=\"button\">\r\n                { name }\r\n            </Button>\r\n            <Popup className=\"form modal\" open={open} closeOnDocumentClick onClose={closeModal} modal >\r\n                <div className=\"form-container\">\r\n                    { content }\r\n                    <CloseButton />\r\n                </div>\r\n            </Popup>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n} from \"react-bootstrap\";\r\nimport '../styles/Form.css';\r\nimport { validateEmail, useFormFields } from \"../util/form\";\r\nimport { authorize, isLoggedIn } from \"../util/cookies\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function LoginForm() {\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        login_email: \"\",\r\n        login_password: \"\",\r\n    });\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isIncorrect, setIncorrect] = useState(false);\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        async function handleSubmit() {\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({email: String(fields.login_email).toLowerCase(), password: fields.login_password})\r\n            };\r\n            await authorize(requestOptions);\r\n        }\r\n\r\n        function validateForm() {\r\n            return (fields.login_email.length > 0 &&\r\n                    fields.login_password.length > 0 &&\r\n                    validateEmail(fields.login_email));\r\n        }\r\n\r\n        if (isLoading) {\r\n            if (validateForm) {\r\n                handleSubmit().then(() => {\r\n                    setLoading(false);\r\n                    if (isLoggedIn()) {\r\n                        setIncorrect(false);\r\n                        history.push(\"/profile\");\r\n                    } else {\r\n                        setIncorrect(true);\r\n                    }\r\n                });\r\n            } else {\r\n                setLoading(false);\r\n                setIncorrect(true);\r\n            }\r\n        }\r\n    }, [isLoading, history, fields]);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleClick}>\r\n            <h1>Login</h1>\r\n            <FormGroup controlId=\"login_email\">\r\n                <FormLabel>Email<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"email\"\r\n                    values = {fields.email}\r\n                    onChange={handleFieldChange}\r\n                    placeholder=\"Email\"\r\n                    autoComplete=\"email\"\r\n                    required\r\n                    pattern=\"^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)+$\"\r\n                />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"login_password\">\r\n                <FormLabel>Password<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    values = {fields.password}\r\n                    onChange={handleFieldChange}\r\n                    placeholder=\"Password\"\r\n                    autoComplete=\"password\"\r\n                    required/>\r\n            </FormGroup>\r\n            {isIncorrect ? <p className=\"response invalidResp\">Incorrect email or password, please try again.</p> : null }\r\n            <Button\r\n                className=\"btn\"\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n            >\r\n                {isLoading ? 'Loading...' : 'Submit'}\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n","/** Code adapted from https://serverless-stack.com/chapters/create-the-signup-form.html */\r\n\r\nimport React, { useState, useEffect }  from \"react\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel,\r\n    Button,\r\n} from \"react-bootstrap\";\r\nimport '../styles/Form.css';\r\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\r\nimport { validateEmail, useFormFields } from \"../util/form\";\r\nimport { authorize } from \"../util/cookies\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function SignupForm() {\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        signup_firstname: \"\",\r\n        signup_lastname: \"\",\r\n        signup_email: \"\",\r\n        signup_password: \"\",\r\n        signup_confirmPassword: \"\",\r\n    });\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [isIncorrect, setIncorrect] = useState(false);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        async function handleSubmit() {\r\n            // signup\r\n            const requestOptions_signup = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({email: String(fields.signup_email).toLowerCase(),\r\n                                      password: fields.signup_password,\r\n                                      name_first: fields.signup_firstname,\r\n                                      name_last: fields.signup_lastname})\r\n            };\r\n            await fetch('api/user', requestOptions_signup);\r\n\r\n            // login\r\n            const requestOptions_login = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({email: String(fields.signup_email).toLowerCase(),\r\n                                      password: fields.signup_password})\r\n            };\r\n            await authorize(requestOptions_login);\r\n        }\r\n\r\n        function validateForm() {\r\n            return (\r\n                fields.signup_firstname.length > 0 &&\r\n                fields.signup_lastname.length > 0 &&\r\n                fields.signup_email.length > 0 &&\r\n                fields.signup_password.length > 0 &&\r\n                fields.signup_confirmPassword === fields.signup_password &&\r\n                validateEmail(fields.signup_email)\r\n            );\r\n        }\r\n\r\n        if (isLoading) {\r\n            if (validateForm()) {\r\n                setIncorrect(false);\r\n                handleSubmit().then(() => {\r\n                    history.push(\"/login\");\r\n                });\r\n            } else {\r\n                setIncorrect(true);\r\n                setLoading(false);\r\n            }\r\n        }\r\n    }, [isLoading, history, fields]);\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleClick}>\r\n            <h1>Sign Up</h1>\r\n            <FormGroup controlId=\"signup_firstname\">\r\n                <FormLabel>First Name<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"text\"\r\n                    values = {fields.signup_firstname}\r\n                    onChange={handleFieldChange}\r\n                    placeholder=\"Name\"\r\n                    autoComplete=\"name\"\r\n                    required/>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"signup_lastname\">\r\n                <FormLabel>Last Name<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"text\"\r\n                    values = {fields.signup_lastname}\r\n                    onChange={handleFieldChange}\r\n                    placeholder=\"Surname\"\r\n                    autoComplete=\"surname\"\r\n                    required/>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"signup_email\">\r\n                <FormLabel>Email<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"email\"\r\n                    className=\"mb-1\"\r\n                    values = {fields.signup_email}\r\n                    onChange={handleFieldChange}\r\n                    placeholder=\"Email\"\r\n                    autoComplete=\"email\"\r\n                    required\r\n                    pattern=\"^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)+$\"\r\n                />\r\n            </FormGroup>\r\n            <PasswordStrengthMeter password={fields.signup_password} />\r\n            <FormGroup controlId=\"signup_password\">\r\n                <FormLabel>Password<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    value={fields.signup_password}\r\n                    onChange={handleFieldChange}\r\n                    placeholder=\"Password\"\r\n                    autoComplete=\"password\"\r\n                    required/>\r\n            </FormGroup>\r\n            <FormGroup controlId=\"signup_confirmPassword\">\r\n                <FormLabel>Confirm Password<p className=\"required\">*</p></FormLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    onChange={handleFieldChange}\r\n                    value={fields.signup_confirmPassword}\r\n                    placeholder=\"Password\"\r\n                    autoComplete=\"password\"\r\n                    required/>\r\n            </FormGroup>\r\n            {isIncorrect ? <p className=\"response invalidResp\">Incorrect details, Passwords may not be the same.</p> : null }\r\n            <Button\r\n                className=\"btn\"\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n            >\r\n                {isLoading ? 'Loading...' : 'Submit'}\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from 'reactjs-popup';\r\nimport { deauthorize } from \"../../util/cookies\";\r\nimport '../../styles/usernav.css';\r\n\r\nexport default function UserNav() {\r\n    const history = useHistory();\r\n\r\n    async function handleLogout() {\r\n        // clear cookies\r\n        deauthorize().then(() => {\r\n            history.push(\"/\");\r\n        });\r\n    }\r\n\r\n    function toProfile() {\r\n        history.push(\"/profile\");\r\n    }\r\n\r\n    function toSettings() {\r\n        history.push(\"/settings\");\r\n    }\r\n\r\n    return (\r\n        <Popup\r\n            className=\"userNav\"\r\n            trigger={<Button className=\"menu_icon btn-info m-2\" type=\"button\">≡</Button>}\r\n            position=\"left top\"\r\n            on=\"hover\"\r\n            closeOnDocumentClick\r\n            mouseLeaveDelay={400}\r\n            mouseEnterDelay={10}\r\n            contentStyle={{ padding: '10px', border: 'none' }}\r\n            arrow={false}\r\n        >\r\n            <div className=\"menu\">\r\n                <div className=\"menu-item\" onClick={toProfile}> Portfolio Gallery</div>\r\n                <div className=\"menu-item\" onClick={toSettings}> Account Settings</div>\r\n                <div className=\"menu-item\" onClick={handleLogout}> Logout</div>\r\n            </div>\r\n        </Popup>\r\n    );\r\n};","import React, { Fragment } from 'react';\r\nimport { isLoggedIn } from \"./util/cookies\";\r\n\r\n// Containers\r\nimport BaseTemplate from './containers/BaseTemplate';\r\nimport Landing from './containers/Landing';\r\nimport BasePage from './containers/BasePage';\r\nimport UpdatePage from './containers/Updates';\r\nimport ContactPage from './containers/Contact';\r\nimport Settings from './containers/Settings';\r\nimport EPortfolio from './containers/EPortfolio';\r\nimport EPortfolioDemo from './containers/EPortfolioDemo';\r\n// Components\r\nimport Popup from './components/RightNav/Popup';\r\nimport LoginForm from './components/Login_Form';\r\nimport SignupForm from './components/Signup_Form';\r\nimport UserNav from './components/RightNav/UserNav';\r\n\r\nexport function HomePage() {\r\n    return (\r\n        <Fragment>\r\n            <title>Home</title>\r\n            <BaseTemplate nav_right = { <RightNav /> } >\r\n                <Landing />\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function LoginPage() {\r\n    return (\r\n        <Fragment>\r\n            <title>Login</title>\r\n            <BaseTemplate nav_right = {<p>Don't have an account? <a href=\"/signup\" className=\"link\">Sign Up!</a></p>} >\r\n                <div className=\"form-container m-auto\">\r\n                    <LoginForm />\r\n                </div>\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function SignUpPage() {\r\n    return (\r\n        <Fragment>\r\n            <title>Sign Up</title>\r\n            <BaseTemplate nav_right = {<p>Have an account? <a href=\"/login\">Login.</a></p>}>\r\n                <div className=\"form-container m-auto\">\r\n                    <SignupForm />\r\n                </div>\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function ProfilePage() {\r\n    return (\r\n        <Fragment>\r\n            <title>Portfolio Gallery</title>\r\n            <BaseTemplate nav_right = { <RightNav /> } >\r\n                <BasePage />\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function SettingsPage() {\r\n    return (\r\n        <Fragment>\r\n            <title>Account Settings</title>\r\n            <BaseTemplate nav_right = { <RightNav /> } >\r\n                <Settings />\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function PortfolioPage(props) {\r\n    return (\r\n        <EPortfolio preview = {props.preview}/>\r\n    );\r\n}\r\n\r\nexport function UpdatesPage() {\r\n    return (\r\n        <Fragment>\r\n            <title>Updates</title>\r\n            <BaseTemplate nav_right = { <RightNav /> }>\r\n                <UpdatePage />\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function ContactUsPage() {\r\n    return (\r\n        <Fragment>\r\n            <title>Contact Us</title>\r\n            <BaseTemplate nav_right = { <RightNav /> }>\r\n                <ContactPage />\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function Demo() {\r\n    return (\r\n        <Fragment>\r\n            <title>Demo</title>\r\n            <BaseTemplate nav_right = { <RightNav /> } >\r\n                <div className=\"container\">\r\n                    <EPortfolioDemo />\r\n                </div>\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport function _404Page() {\r\n    return (\r\n        <Fragment>\r\n            <title>Uh Oh...</title>\r\n            <BaseTemplate nav_right = { <RightNav /> } >\r\n                <div className=\"container banner\">\r\n                    <h1 className=\"font-weight-semibold\">The page you're looking for doesn't seem to match any page we know of.</h1>\r\n                    <img src={process.env.PUBLIC_URL + \"/images/not_found.png\"} alt=\"\" className=\"img-fluid pt-5\" />\r\n                </div>\r\n            </BaseTemplate>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nfunction RightNav() {\r\n    if (isLoggedIn()) {\r\n        return (\r\n            <Fragment>\r\n                <UserNav />\r\n            </Fragment>\r\n        );\r\n    } else {\r\n        return (\r\n            <Fragment>\r\n                <Popup name=\"Login\"> <LoginForm /> </Popup>\r\n                <Popup name=\"Sign Up\"> <SignupForm /> </Popup>\r\n            </Fragment>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { isLoggedIn } from \"./util/cookies\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport {\r\n    HomePage,\r\n    LoginPage,\r\n    SignUpPage,\r\n    ProfilePage,\r\n    SettingsPage,\r\n    PortfolioPage,\r\n    UpdatesPage,\r\n    ContactUsPage,\r\n    Demo,\r\n    _404Page\r\n} from './routing.js';\r\n\r\n//Routing\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path=\"/\"\r\n                    component={HomePage}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/login\"\r\n                    render={() => {\r\n                        return (isLoggedIn() ? <Redirect to=\"/profile\" /> : <LoginPage />)\r\n                    }}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/signup\"\r\n                    render={() => {\r\n                        return (isLoggedIn() ? <Redirect to=\"/profile\" /> : <SignUpPage />)\r\n                    }}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/profile\"\r\n                    render={() => {\r\n                        return (isLoggedIn() ? <ProfilePage /> : <Redirect to=\"/\" />)\r\n                    }}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/settings\"\r\n                    render={() => {\r\n                        return (isLoggedIn() ? <SettingsPage /> : <Redirect to=\"/\" />)\r\n                    }}\r\n                />\r\n                <Route\r\n                    path=\"/portfolio/\"\r\n                    render={() => {\r\n                        return (\r\n                                <PortfolioPage preview = {!isLoggedIn()} />\r\n                                )\r\n                    }}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/demo\"\r\n                    component={Demo}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/updates\"\r\n                    component={UpdatesPage}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/contact\"\r\n                    component={ContactUsPage}\r\n                />\r\n                <Route\r\n                    path=\"/\"\r\n                    component={_404Page}\r\n                />\r\n            </Switch>\r\n        </Router>\r\n    </React.StrictMode>,\r\n  document.getElementById('content')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}